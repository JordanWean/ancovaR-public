[{"name":"app.R","content":"# shinylive::export(appdir = \"AncovaR-test/\", destdir = \"docs\")\r\n\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(ggpubr)\r\nlibrary(dplyr)\r\nlibrary(markdown)\r\nlibrary(shinythemes)\r\nlibrary(patchwork)\r\n\r\nui <- navbarPage(\r\n  title = 'AncovaR',\r\n  theme = shinytheme('united'),\r\n  \r\n  # First Tab: One Factor, One Covariate Analysis\r\n  tabPanel(\"One Factor Analysis\",\r\n           sidebarPanel(\r\n             fileInput(\r\n               'file1',\r\n               'Choose CSV file',\r\n               multiple = FALSE,\r\n               accept = c('text/csv', 'text/comma-separated-values,text/plain', '.csv'),\r\n               width = NULL,\r\n               buttonLabel = 'Browse...',\r\n               placeholder = 'No file selected'\r\n             ),\r\n             selectInput('yval', 'Which column contains the y variable?', choices = c()),\r\n             selectInput('factor', 'Which column contains the grouping variable?', choices = c()),\r\n             selectInput('covariate', 'Which column contains the covariate?', choices = c())\r\n           ),\r\n           mainPanel(\r\n             # plotOutput('xyplot', height = '350px', width = '500px'),\r\n             plotOutput('patchplot1', height = '350px', width = '800px'),\r\n             htmlOutput('ancovaExplanation')\r\n           )\r\n  ),\r\n  \r\n  # Second Tab: Two Factors, One Covariate Analysis\r\n  tabPanel(\"Two Factor Analysis\",\r\n           sidebarPanel(\r\n             fileInput(\r\n               'file2',\r\n               'Choose CSV file',\r\n               multiple = FALSE,\r\n               accept = c('text/csv', 'text/comma-separated-values,text/plain', '.csv'),\r\n               width = NULL,\r\n               buttonLabel = 'Browse...',\r\n               placeholder = 'No file selected'\r\n             ),\r\n             selectInput('yval2', 'Which column contains the y variable?', choices = c()),\r\n             selectInput('factor1', 'Which column contains the first grouping variable?', choices = c()),\r\n             selectInput('factor2', 'Which column contains the second grouping variable?', choices = c()),\r\n             selectInput('covariate2', 'Which column contains the covariate?', choices = c())\r\n           ),\r\n           mainPanel(\r\n             # Add Plots and Outputs here for two-factor analysis\r\n             # plotOutput('xyplot2', height = '350px', width = '500px'),\r\n             plotOutput('patchplot2', height = '350px', width = '800px'),\r\n             htmlOutput('ancovaExplanation2')\r\n           )\r\n  )\r\n)\r\n\r\nserver <- function(session, input, output) {\r\n  \r\n  # Reactive for first ANCOVA\r\n  data1 = reactive({\r\n    validate(need(input$file1, 'Please upload a CSV file'))\r\n    inFile = input$file1\r\n    if (is.null(inFile))\r\n      return(NULL)\r\n    df = read.csv(inFile$datapath, na.strings = c('', 'NA', '#N/A'))\r\n    return(df)\r\n  })\r\n  \r\n  # data2 = reactive({\r\n  #   df3 = data1()\r\n  #   updateSelectInput(session, 'yval', choices=colnames(df3))\r\n  #   updateSelectInput(session, 'factor', choices=colnames(df3))\r\n  #   updateSelectInput(session, 'covariate', choices=colnames(df3))\r\n  #   return(df3)\r\n  # })\r\n  \r\n  data2 = reactive({\r\n    df3 = data1()\r\n    updateSelectInput(session, 'yval', choices=colnames(df3))\r\n    updateSelectInput(session, 'factor', choices=colnames(df3))\r\n    updateSelectInput(session, 'covariate', choices=colnames(df3))\r\n    return(df3)\r\n  })\r\n  \r\n\r\n  # regression_lines = reactive({\r\n  #   df = data2()\r\n  #   validate(\r\n  #     need(input$yval != '', 'Please select a y variable'),\r\n  #     need(input$factor != '', 'Please select a grouping variable'),\r\n  #     need(input$covariate != '', 'Please select a covariate')\r\n  #   )\r\n  #   \r\n  #   df[[input$yval]] = as.numeric(df[[input$yval]])\r\n  #   df[[input$covariate]] = as.numeric(df[[input$covariate]])\r\n  #   df[[input$factor]] = as.factor(df[[input$factor]])\r\n  #   \r\n  #   lines_data = df %>%\r\n  #     group_by(!!sym(input$factor)) %>%\r\n  #     do({\r\n  #       fit = lm(reformulate(input$covariate, input$yval), data = .)\r\n  #       grid = data.frame(input_covariate_vals = seq(min(.[[input$covariate]], na.rm = TRUE), max(.[[input$covariate]], na.rm = TRUE), length.out = 100))\r\n  #       predictions = predict(fit, newdata = grid)\r\n  #       data.frame(covariate = grid$input_covariate_vals, predicted = predictions, factor = unique(.[[input$factor]]))\r\n  #     })\r\n  #   \r\n  #   return(lines_data)\r\n  # })\r\n  \r\n  output$xyplot = renderPlot({\r\n    df = data2()\r\n    ggplot(data = df, aes_string(\r\n      x = input$covariate,\r\n      y = input$yval,\r\n      color = input$factor\r\n    )) +\r\n      geom_point() +\r\n      theme_pubr()\r\n  })\r\n  \r\n  output$patchplot1 <- renderPlot({\r\n    df <- data2()\r\n    \r\n    scatterplot <-\r\n      ggplot(data = df,\r\n             aes_string(\r\n               x = input$covariate,\r\n               y = input$yval,\r\n               color = input$factor\r\n             )) +\r\n      geom_point() +\r\n      theme_pubr()\r\n    \r\n    groupedplot <-\r\n      ggplot(data = df,\r\n             aes_string(\r\n               x = input$factor,\r\n               y = input$yval,\r\n               color = input$factor\r\n             )) +\r\n      geom_boxplot() +\r\n      geom_point() +\r\n      theme_pubr()\r\n    \r\n    # Combine plots using patchwork\r\n    combined <- scatterplot | groupedplot\r\n    \r\n    # Print the combined plot\r\n    combined\r\n  })\r\n  \r\n  \r\n  output$ancovaExplanation = renderUI({\r\n    model = ancova_model()\r\n    \r\n    if (is.null(model)) {\r\n      return(\"No model available - please ensure data is uploaded and valid selections are made.\")\r\n    }\r\n    \r\n    ancova_summary <- capture.output({\r\n      cat('ANCOVA with interaction\\n')\r\n      print(summary(model[[1]]))\r\n      cat('\\nANCOVA without interaction\\n')\r\n      print(summary(model[[2]]))\r\n    })\r\n    \r\n    explanation <- \"\r\n    <h3>ANCOVA Analysis<\/h3>\r\n    <p>The ANCOVA (Analysis of Covariance) assesses whether population means of a dependent variable (response variable) are equal across levels of a categorical independent variable (factor), while controlling for other continuous variables (covariates).<\/p>\r\n    <p>The interaction effect in ANCOVA checks if the relationship between covariate and response variable differs across levels of the factor. For a proper ANCOVA, you must meet the assumption of homogeneity of slopes. This is tested using the first analysis, <strong>ANCOVA with interaction<\/strong>. If the p value for the interaction (the line with covariate:factor) is non-significant, your data meets the assumption. You can then use the numbers from the <strong>ANCOVA without interaction<\/strong> section as your true ANCOVA results.<\/p>\r\n    <pre><code>%s<\/code><\/pre>\r\n    \"\r\n    \r\n    HTML(sprintf(explanation, paste(ancova_summary, collapse = \"<br/>\")))\r\n  })\r\n  \r\n  ancova_model = reactive({\r\n    df = data2()\r\n    validate(\r\n      need(input$yval != '', 'Please select a y variable'),\r\n      need(input$factor != '', 'Please select a grouping variable'),\r\n      need(input$covariate != '', 'Please select a covariate')\r\n    )\r\n    \r\n    df[[input$yval]] = as.numeric(df[[input$yval]])\r\n    df[[input$covariate]] = as.numeric(df[[input$covariate]])\r\n    df[[input$factor]] = as.factor(df[[input$factor]])\r\n    \r\n    if (any(is.na(df[[input$yval]])) | any(is.na(df[[input$covariate]]))) {\r\n      stop('The y variable or covariate contains non-numeric values that could not be converted.')\r\n    }\r\n    \r\n    aov.i = aov(as.formula(paste(input$yval, '~', input$covariate, '+', input$factor, '+', input$covariate, ':', input$factor)), data = df)\r\n    aov.wo = aov(as.formula(paste(input$yval, '~', input$covariate, '+', input$factor)), data = df)\r\n    \r\n    return(list(aov.i, aov.wo))\r\n  })\r\n  \r\n  # Additions for two-way\r\n  # two-way\r\n  data1_2way = reactive({\r\n    validate(need(input$file2, 'Please upload a CSV file'))\r\n    inFile = input$file2\r\n    if (is.null(inFile))\r\n      return(NULL)\r\n    df = read.csv(inFile$datapath, na.strings = c('', 'NA', '#N/A'))\r\n    return(df)\r\n  })\r\n  \r\n  \r\n  \r\n  data2way = reactive({\r\n    df3 = data1_2way()\r\n    updateSelectInput(session, 'yval2', choices=colnames(df3))\r\n    updateSelectInput(session, 'factor1', choices=colnames(df3))\r\n    updateSelectInput(session, 'factor2', choices=colnames(df3))\r\n    updateSelectInput(session, 'covariate2', choices=colnames(df3))\r\n    return(df3)\r\n  })\r\n  \r\n\r\n  # output$xyplot2 = renderPlot({\r\n  #   df = data2way()\r\n  #   ggplot(data = df, aes_string(\r\n  #     x = input$covariate2,\r\n  #     y = input$yval2,\r\n  #     color = input$factor1,\r\n  #     shape = input$factor2\r\n  #   )) +\r\n  #     geom_point() +\r\n  #     theme_pubr()\r\n  # })\r\n  \r\n  output$patchplot2 <- renderPlot({\r\n    df <- data2way()\r\n    \r\n    scatterplot <-\r\n      ggplot(data = df,\r\n             aes_string(\r\n               x = input$covariate2,\r\n               y = input$yval2,\r\n               color = input$factor1,\r\n               shape = input$factor2\r\n             )) +\r\n      geom_point() +\r\n      theme_pubr()\r\n    \r\n    groupedplot <-\r\n      ggplot(data = df,\r\n             aes_string(\r\n               x = input$factor1,\r\n               y = input$yval2,\r\n               color = input$factor2\r\n             )) +\r\n      geom_boxplot() +\r\n      geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.75)) +\r\n      theme_pubr()\r\n    \r\n    # Combine plots using patchwork\r\n    combined <- scatterplot | groupedplot\r\n    \r\n    # Print the combined plot\r\n    combined\r\n  })\r\n  \r\n  \r\n  \r\n  ancova_model_2way = reactive({\r\n    df = data2way()\r\n    validate(\r\n      need(input$yval2 != '', 'Please select a y variable'),\r\n      need(input$factor1 != '', 'Please select grouping variable 1'),\r\n      need(input$factor2 != '', 'Please select grouping variable 2'),\r\n      need(input$covariate2 != '', 'Please select a covariate')\r\n    )\r\n    \r\n    df[[input$yval2]] = as.numeric(df[[input$yval2]])\r\n    df[[input$covariate2]] = as.numeric(df[[input$covariate2]])\r\n    df[[input$factor1]] = as.factor(df[[input$factor1]])\r\n    df[[input$factor2]] = as.factor(df[[input$factor2]])\r\n    \r\n    if (any(is.na(df[[input$yval2]])) | any(is.na(df[[input$covariate2]]))) {\r\n      stop('The y variable or covariate contains non-numeric values that could not be converted.')\r\n    }\r\n\r\n    aov.i = aov(as.formula(paste(input$yval2, '~', input$covariate2, '*', input$factor1, '*', input$factor2)), data = df)\r\n    aov.wo = aov(as.formula(paste(input$yval2, '~', input$covariate2, '+', input$factor1 , '+', input$factor2)), data = df)\r\n    \r\n    \r\n    return(list(aov.i, aov.wo))\r\n  })\r\n  \r\n  \r\n  output$ancovaExplanation2 = renderUI({\r\n    model = ancova_model_2way()\r\n    \r\n    if (is.null(model)) {\r\n      return(\"No model available - please ensure data is uploaded and valid selections are made.\")\r\n    }\r\n    \r\n    ancova_summary <- capture.output({\r\n      cat('ANCOVA with interaction\\n')\r\n      print(summary(model[[1]]))\r\n      cat('\\nANCOVA without interaction\\n')\r\n      print(summary(model[[2]]))\r\n    })\r\n    \r\n    explanation <- \"\r\n    <h3>ANCOVA Analysis<\/h3>\r\n    <p>The ANCOVA (Analysis of Covariance) assesses whether population means of a dependent variable (response variable) are equal across levels of a categorical independent variable (factor), while controlling for other continuous variables (covariates).<\/p>\r\n    <p>The interaction effect in ANCOVA checks if the relationship between covariate and response variable differs across levels of the factor. For a proper ANCOVA, you must meet the assumption of homogeneity of slopes. This is tested using the first analysis, <strong>ANCOVA with interaction<\/strong>. If the p values for <strong>all interactions that include your covariate<\/strong> are non-significant, your data meets the assumption. You can then use the numbers from the <strong>ANCOVA without interaction<\/strong> section as your true ANCOVA results.<\/p>\r\n    <pre><code>%s<\/code><\/pre>\r\n    \"\r\n    \r\n    HTML(sprintf(explanation, paste(ancova_summary, collapse = \"<br/>\")))\r\n  })\r\n  \r\n}\r\n\r\n# tabPanel(\"Two Factor Analysis\",\r\n#          sidebarPanel(\r\n#            fileInput(\r\n#              'file2',\r\n#              'Choose CSV file',\r\n#              multiple = FALSE,\r\n#              accept = c('text/csv', 'text/comma-separated-values,text/plain', '.csv'),\r\n#              width = NULL,\r\n#              buttonLabel = 'Browse...',\r\n#              placeholder = 'No file selected'\r\n#            ),\r\n#            selectInput('yval2', 'Which column contains the y variable?', choices = c()),\r\n#            selectInput('factor1', 'Which column contains the first grouping variable?', choices = c()),\r\n#            selectInput('factor2', 'Which column contains the second grouping variable?', choices = c()),\r\n#            selectInput('covariate2', 'Which column contains the covariate?', choices = c())\r\n#          ),\r\n#          mainPanel(\r\n#            # Add Plots and Outputs here for two-factor analysis\r\n#            plotOutput('xyplot2', height = '350px', width = '500px'),\r\n#            htmlOutput('ancovaExplanation2')\r\n#          )\r\n# )\r\n\r\n\r\nshinyApp(ui = ui, server = server)","type":"text"}]
